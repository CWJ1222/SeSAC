<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>고급 채팅방</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
      }

      #container {
        display: flex;
        width: 80%;
        height: 90vh;
        border: 1px solid #ddd;
      }

      /* 왼쪽 입력창 영역 */
      #sidebar {
        width: 30%;
        background-color: #f1f1f1;
        padding: 15px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        border-right: 1px solid #ddd;
      }

      /* 오른쪽 채팅 메시지 영역 */
      #chat-content {
        width: 70%;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        padding: 15px;
      }

      /* 채팅 메시지 영역 */
      #messages {
        list-style-type: none;
        padding: 0;
        max-height: 70vh;
        overflow-y: auto;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
      }

      #messages li {
        padding: 8px;
        border-radius: 8px;
        max-width: 60%;
        word-wrap: break-word;
        text-align: left;
        background-color: #f8f9fa;
        border: 1px solid #ddd;
        margin: 5px 0;
      }

      /* 채팅 입력창 스타일 */
      input,
      button {
        margin: 5px 0;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
      }

      button {
        cursor: pointer;
        background-color: #007bff;
        color: white;
        border: none;
      }

      button:hover {
        background-color: #0056b3;
      }
    </style>
  </head>
  <body>
    <div id="container">
      <!-- 왼쪽: 닉네임 및 입력 영역 -->
      <div id="sidebar">
        <h3>닉네임 설정</h3>
        <input type="text" id="nickname" placeholder="닉네임 입력" />
        <button onclick="setNickname()">설정</button>

        <h3>채팅 입력</h3>
        <form id="chat-form">
          <input type="text" id="msg" required placeholder="메시지 입력" />
          <button type="submit">보내기</button>
        </form>

        <h3>이미지 업로드</h3>
        <input type="file" id="image-upload" accept="image/*" />
      </div>

      <!-- 오른쪽: 채팅 내용 영역 -->
      <div id="chat-content">
        <h2>채팅방</h2>
        <ul id="messages"></ul>
      </div>
    </div>

    <script>
      const socket = new WebSocket(`ws://${window.location.host}`);
      let userName = "익명";

      socket.onopen = () => console.log("✅ 서버에 연결됨");

      socket.onmessage = (event) => {
        try {
          const data = JSON.parse(event.data);
          const messageItem = document.createElement("li");

          if (data.type === "info") {
            messageItem.classList.add("info");
            messageItem.textContent = data.message;
          } else {
            const msgBox = document.createElement("span");
            msgBox.classList.add("message-box");
            msgBox.innerHTML = `<strong>${data.name}</strong>: ${data.text}`;

            messageItem.appendChild(msgBox);
          }

          const messagesContainer = document.getElementById("messages");
          messagesContainer.appendChild(messageItem);

          // 📌 새로운 메시지가 추가되면 스크롤을 맨 아래로 이동
          messagesContainer.scrollTop = messagesContainer.scrollHeight;
        } catch (error) {
          console.error("❌ 메시지 처리 중 오류:", error);
        }
      };

      // 닉네임 설정 함수
      function setNickname() {
        userName = document.getElementById("nickname").value.trim() || "익명";
        socket.send(JSON.stringify({ type: "setName", name: userName }));
      }

      // 메시지 전송 이벤트
      document
        .getElementById("chat-form")
        .addEventListener("submit", (event) => {
          event.preventDefault();
          const msg = document.getElementById("msg").value.trim();
          if (msg) {
            socket.send(
              JSON.stringify({ type: "message", name: userName, text: msg })
            );
            document.getElementById("msg").value = "";
          }
        });

      // 이미지 업로드 기능
      document
        .getElementById("image-upload")
        .addEventListener("change", async (event) => {
          const file = event.target.files[0];
          if (!file) return;

          const formData = new FormData();
          formData.append("image", file);

          const response = await fetch("/upload", {
            method: "POST",
            body: formData,
          });

          const result = await response.json();
          if (result.imageUrl) {
            socket.send(
              JSON.stringify({
                type: "message",
                name: userName,
                text: `<img src="${result.imageUrl}" width="100" />`,
              })
            );
          }
        });

      socket.onclose = () => console.log("❌ 서버와 연결 끊김");
    </script>
  </body>
</html>
